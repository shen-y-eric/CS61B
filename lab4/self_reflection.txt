All questions are optional, though try to answer at least 4. The main goal of this file is to get you thinking critically about your own work, but we will also use these self reflections at the end of the semester when we do our internal review of the course.

ArrayDeque:

Q: Give an example of at least one idea from the staff solution that would have made your solution better (if any).

A: I think the staff's wrapIndex is much more efficient than creating a separate plusOne and minusOne like I did.

Q: What's something you felt proud of in your code, if anything?

A: Before turning it in, I realized that I should probably use size() instead of just the size variable and isEmpty(), so I changed all the places in the code that used that stuff. I'm also proud that I managed to implement System.arrayCopy even though it took a ton of trial and error.

Q: What's something that was particularly inelegant in your code, if anything?

A: My resize was super ugly at first and it didn't even work because I tried to fit everything into one function, but I decided to change my approach and the code became simpler. I still think I probably didn't use System.arrayCopy as efficiently as I could.

Q: What did you learn by talking to your partner about writing ArrayDeque?

A: Many of us had issues with re-adjusting nextFirst and nextLast when resizing. I had a hard time figuring out how to do it properly and it was definitely the hardest part of the project.

Q: What do you wish you would have known before writing ArrayDeque, if anything?

A: Maybe more practice with generic types, but it was easy to learn through doing this.

Q: If you wrote ArrayDeque again, what would you do differently, if anything?

A: Simplify my resize functions or just make it easier to understand.

-----

LinkedListDeque:

Q: Give an example of at least one idea from the staff solution that would have made your solution better (if any).

A: I think my program was actually simpler than some of the staff solution functions, but I forgot to use size() instead of just the private variable size for abstraction purposes. At the cost of less lines of code however, some of my functions are a bit confusing and skips steps that would make it easier to read for other people.

Q: What's something you felt proud of in your code, if anything?

A: I'm proud that I was able to implement the circular sentinel even when I barely understood it after watching the lecture. Doing this project definitely improved my understanding a lot.

Q: What's something that was particularly inelegant in your code, if anything?

A:

Q: What did you learn by talking to your partner about writing LinkedListDeque?

A: A lot of people had trouble with getRecursive because we didn't consider using a helper function at first.

Q: What do you wish you would have known before writing LinkedListDeque, if anything?

A: How to use helper functions effectively because it took me a long time and a lot of trial and error for the getRecursiveHelper function. I also wish I just had a better understand of doubly-linked lists and how pointers work before I started the project.

Q: If you wrote LinkedListDeque again, what would you do differently, if anything?

A:

-----

Meta:

Q: Did you like this design review process? Anything we should do differently next time?

A: Yes it helps to discuss with peers. Maybe add a mid-project check in as well.